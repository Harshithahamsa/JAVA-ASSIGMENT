package com.te.base.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.te.base.dto.CarDetails;
import com.te.base.service.CarService;

@RestController
public class CarController {

	@Autowired
	private CarService service;
	
	@GetMapping("/getData/{id}")
	public ResponseEntity<?> getData(@PathVariable(name="id") int id){
		CarDetails details=service.getDetail(id);
		if(details!=null) {
			return new ResponseEntity<CarDetails>(details, HttpStatus.OK);
			
		}
		return  new ResponseEntity<String>("Data not found", HttpStatus.INTERNAL_SERVER_ERROR);
		
	}
	
	@PostMapping("/getData")
	public ResponseEntity<?> addData(@RequestBody CarDetails  details){
		CarDetails details2=service.addData(details);
		
		if(details2!=null) {
			return new ResponseEntity<String>("Data Added Successfully", HttpStatus.OK);
			
		}
		return  new ResponseEntity<String>("Something Went Wrong", HttpStatus.INTERNAL_SERVER_ERROR);
		
		
		
	}
	
	@PutMapping("/update/{id}")
	public ResponseEntity<?> updateData(@RequestBody CarDetails  details){
		CarDetails details2=service.updateData(details);
		
		if(details2!=null) {
			return new ResponseEntity<String>("Data Updated Successfully", HttpStatus.OK);
			
		}
		return  new ResponseEntity<String>("Something Went Wrong", HttpStatus.INTERNAL_SERVER_ERROR);
		
		}
	
	
	@DeleteMapping("/delete/{id}")
	public ResponseEntity<?> deleteData(@PathVariable int id){
		try {
			service.deleteData(id);
			return new ResponseEntity<String>("Data Deleted Successfully", HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>("something went wrong", HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
	}
	
	
	
	
	
	
}
